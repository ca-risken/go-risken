// AUTOGENERATED FILE BY CODE GENERATOR. DO NOT EDIT.
// Source: generator.yaml
package risken

import (
	"context"

	proto "github.com/ca-risken/core/proto/project"
)

func (c *Client) ListProject(ctx context.Context, req *proto.ListProjectRequest) (*proto.ListProjectResponse, error) {
	httpReq, err := c.NewRequest(ctx, "GET", "/api/v1/project/list-project", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.ListProjectResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) UpdateProject(ctx context.Context, req *proto.UpdateProjectRequest) (*proto.UpdateProjectResponse, error) {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/project/update-project", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.UpdateProjectResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) DeleteProject(ctx context.Context, req *proto.DeleteProjectRequest) error {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/project/delete-project", req)
	if err != nil {
		return err
	}
	if _, err := c.Do(httpReq); err != nil {
		return err
	}
	return nil
}

func (c *Client) TagProject(ctx context.Context, req *proto.TagProjectRequest) (*proto.TagProjectResponse, error) {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/project/tag-project", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.TagProjectResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) UntagProject(ctx context.Context, req *proto.UntagProjectRequest) error {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/project/untag-project", req)
	if err != nil {
		return err
	}
	if _, err := c.Do(httpReq); err != nil {
		return err
	}
	return nil
}
