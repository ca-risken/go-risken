// AUTOGENERATED FILE BY CODE GENERATOR. DO NOT EDIT.
// Source: generator.yaml
package risken

import (
	"context"

	proto "github.com/ca-risken/datasource-api/proto/aws"
)

func (c *Client) ListAWS(ctx context.Context, req *proto.ListAWSRequest) (*proto.ListAWSResponse, error) {
	httpReq, err := c.NewRequest(ctx, "GET", "/api/v1/aws/list-aws", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.ListAWSResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) ListDataSource(ctx context.Context, req *proto.ListDataSourceRequest) (*proto.ListDataSourceResponse, error) {
	httpReq, err := c.NewRequest(ctx, "GET", "/api/v1/aws/list-datasource", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.ListDataSourceResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) PutAWS(ctx context.Context, req *proto.PutAWSRequest) (*proto.PutAWSResponse, error) {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/aws/put-aws", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.PutAWSResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) DeleteAWS(ctx context.Context, req *proto.DeleteAWSRequest) error {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/aws/delete-aws", req)
	if err != nil {
		return err
	}
	if _, err := c.Do(httpReq); err != nil {
		return err
	}
	return nil
}

func (c *Client) InvokeScan(ctx context.Context, req *proto.InvokeScanRequest) error {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/aws/invoke-scan", req)
	if err != nil {
		return err
	}
	if _, err := c.Do(httpReq); err != nil {
		return err
	}
	return nil
}

func (c *Client) AttachDataSource(ctx context.Context, req *proto.AttachDataSourceRequest) (*proto.AttachDataSourceResponse, error) {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/aws/attach-datasource", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.AttachDataSourceResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) DetachDataSource(ctx context.Context, req *proto.DetachDataSourceRequest) error {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/aws/detach-datasource", req)
	if err != nil {
		return err
	}
	if _, err := c.Do(httpReq); err != nil {
		return err
	}
	return nil
}
