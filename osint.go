// AUTOGENERATED FILE BY CODE GENERATOR. DO NOT EDIT.
// Source: generator.yaml
package risken

import (
	"context"

	proto "github.com/ca-risken/datasource-api/proto/osint"
)

func (c *Client) ListOsint(ctx context.Context, req *proto.ListOsintRequest) (*proto.ListOsintResponse, error) {
	httpReq, err := c.NewRequest(ctx, "GET", "/api/v1/osint/list-osint", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.ListOsintResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) ListOsintDataSource(ctx context.Context, req *proto.ListOsintDataSourceRequest) (*proto.ListOsintDataSourceResponse, error) {
	httpReq, err := c.NewRequest(ctx, "GET", "/api/v1/osint/list-datasource", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.ListOsintDataSourceResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) ListRelOsintDataSource(ctx context.Context, req *proto.ListRelOsintDataSourceRequest) (*proto.ListRelOsintDataSourceResponse, error) {
	httpReq, err := c.NewRequest(ctx, "GET", "/api/v1/osint/list-rel-datasource", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.ListRelOsintDataSourceResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) ListOsintDetectWord(ctx context.Context, req *proto.ListOsintDetectWordRequest) (*proto.ListOsintDetectWordResponse, error) {
	httpReq, err := c.NewRequest(ctx, "GET", "/api/v1/osint/list-word", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.ListOsintDetectWordResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) GetOsint(ctx context.Context, req *proto.GetOsintRequest) (*proto.GetOsintResponse, error) {
	httpReq, err := c.NewRequest(ctx, "GET", "/api/v1/osint/get-osint", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.GetOsintResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) InvokeScanOsint(ctx context.Context, req *proto.InvokeScanRequest) error {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/osint/invoke-scan", req)
	if err != nil {
		return err
	}
	if _, err := c.Do(httpReq); err != nil {
		return err
	}
	return nil
}

func (c *Client) PutOsint(ctx context.Context, req *proto.PutOsintRequest) (*proto.PutOsintResponse, error) {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/osint/put-osint", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.PutOsintResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) DeleteOsint(ctx context.Context, req *proto.DeleteOsintRequest) error {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/osint/delete-osint", req)
	if err != nil {
		return err
	}
	if _, err := c.Do(httpReq); err != nil {
		return err
	}
	return nil
}

func (c *Client) PutRelOsintDataSource(ctx context.Context, req *proto.PutRelOsintDataSourceRequest) (*proto.PutRelOsintDataSourceResponse, error) {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/osint/put-rel-datasource", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.PutRelOsintDataSourceResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) DeleteRelOsintDataSource(ctx context.Context, req *proto.DeleteRelOsintDataSourceRequest) error {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/osint/delete-rel-datasource", req)
	if err != nil {
		return err
	}
	if _, err := c.Do(httpReq); err != nil {
		return err
	}
	return nil
}

func (c *Client) PutOsintDetectWord(ctx context.Context, req *proto.PutOsintDetectWordRequest) (*proto.PutOsintDetectWordResponse, error) {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/osint/put-word", req)
	if err != nil {
		return nil, err
	}
	httpResp, err := c.Do(httpReq)
	if err != nil {
		return nil, err
	}
	var resp proto.PutOsintDetectWordResponse
	if err := decodeBodyWithDataKey(httpResp, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *Client) DeleteOsintDetectWord(ctx context.Context, req *proto.DeleteOsintDetectWordRequest) error {
	httpReq, err := c.NewRequest(ctx, "POST", "/api/v1/osint/delete-word", req)
	if err != nil {
		return err
	}
	if _, err := c.Do(httpReq); err != nil {
		return err
	}
	return nil
}
